/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetakipsistemi;

import java.awt.HeadlessException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author X550V
 */
public class personelSil extends javax.swing.JFrame {

    String kullanıcıId;
    DefaultListModel dlm = new DefaultListModel();
    Connection con;
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("ProjeTakipSistemiPU");

    /**
     * Creates new form personelSil
     */
    public personelSil(String kullanıcıId) throws IOException {
        String dosya = "C:/Users/X550V/Desktop/Personel.dat";
        initComponents();
        this.kullanıcıId = kullanıcıId;
        dlm.removeAllElements();
        EntityManager em = emf.createEntityManager();
        Query q = em.createQuery("select p from Personel p");
        Query q2 = em.createQuery("select p from Proje p");
        List<Personel> personeller = q.getResultList();
        List<Proje> projeler = q2.getResultList();

        for (Proje proje : projeler) {
            for (Personel personel : personeller) {
                if (proje.getKullaniciid().equals(kullanıcıId)) {
                    if (proje.getProjekodu().equals(personel.getCalisacagiproje())) {

                        dlm.addElement(personel.getTckimlik());

                    }

                }
            }
        }
        personellerList.setModel(dlm);

    }

    public personelSil() throws HeadlessException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        personellerList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        personelSil = new javax.swing.JButton();

        jScrollPane1.setViewportView(personellerList);

        jLabel1.setText("Personeller");

        personelSil.setText("Sil");
        personelSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personelSilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 210, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(28, 28, 28)
                        .addComponent(personelSil, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(personelSil, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void personelSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personelSilActionPerformed
        // TODO add your handling code here:
        EntityManager em = emf.createEntityManager();
        Query q = em.createQuery("select p from Personel p");
        List<Personel> personeller = q.getResultList();
        if (!personellerList.isSelectionEmpty()) {
            int yanit = JOptionPane.showConfirmDialog(null, "Eminmisiniz ?", "Uyarı!", 1, 1);
            if (yanit == JOptionPane.YES_OPTION) {
                for (Personel personel : personeller) {

                    if (personel.getTckimlik().equalsIgnoreCase(personellerList.getSelectedValue())) {
                        for (int i = 0; i < projeYönetim.dtm.getRowCount(); i++) {
                            String a = (String) (projeYönetim.dtm.getValueAt(i, 5));
                            if (a.equals(personellerList.getSelectedValue())) {
                                projeYönetim.dtm.removeRow(i);
                            }
                        }
                        dlm.removeElement(personel.getTckimlik());
                        em.getTransaction().begin();
                        em.remove(personel);
                        em.getTransaction().commit();
                        em.close();
                        JOptionPane.showMessageDialog(rootPane, "Personel Başarıyla Silindi ...");

                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Personel Seçmediniz ...");
        }


    }//GEN-LAST:event_personelSilActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(personelSil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(personelSil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(personelSil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(personelSil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new personelSil().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton personelSil;
    private javax.swing.JList<String> personellerList;
    // End of variables declaration//GEN-END:variables
}
