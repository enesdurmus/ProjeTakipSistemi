/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetakipsistemi;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author X550V
 */
public class personelKaydırma extends javax.swing.JFrame {

    String kullanıcıId;
    DefaultListModel personelKaydırmaModel = new DefaultListModel();
    DefaultListModel personelKaydırmaModel2 = new DefaultListModel();
    DefaultListModel personelKaydırmaModel3 = new DefaultListModel();
    DefaultListModel personelKaydırmaModel4 = new DefaultListModel();
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("ProjeTakipSistemiPU");
    Connection con;

    /**
     * Creates new form personelKaydırma
     */
    public personelKaydırma(String kullanıcıId) {
        initComponents();
        perDegistirmeProjeList.setModel(personelKaydırmaModel);
        perKaydırmaProje2.setModel(personelKaydırmaModel);
        this.kullanıcıId = kullanıcıId;
    }

    public personelKaydırma() throws HeadlessException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        personelDegistirmeKaydır = new javax.swing.JButton();
        perDegistirmeHepsiniKaydır = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        perDegistirmeProjeList = new javax.swing.JList<>();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        perKaydırmaProje2 = new javax.swing.JList<>();
        jLabel40 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        perDegistirmePerList = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        perDegistirmeDegisenlerList = new javax.swing.JList<>();

        personelDegistirmeKaydır.setText("Kaydır");
        personelDegistirmeKaydır.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personelDegistirmeKaydırActionPerformed(evt);
            }
        });

        perDegistirmeHepsiniKaydır.setText("Hepsini Kaydır");
        perDegistirmeHepsiniKaydır.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perDegistirmeHepsiniKaydırActionPerformed(evt);
            }
        });

        perDegistirmeProjeList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                perDegistirmeProjeListValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(perDegistirmeProjeList);

        jLabel37.setText("Projeler");

        jLabel38.setText("Personeller");

        jLabel39.setText("Seçilen Projede Çalışanlar");

        perKaydırmaProje2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                perKaydırmaProje2ValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(perKaydırmaProje2);

        jLabel40.setText("Kaydırmak İstediğiniz Proje");

        jScrollPane2.setViewportView(perDegistirmePerList);

        jScrollPane3.setViewportView(perDegistirmeDegisenlerList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel39))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(personelDegistirmeKaydır, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(perDegistirmeHepsiniKaydır, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel40))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(jLabel39)
                            .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(personelDegistirmeKaydır)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(perDegistirmeHepsiniKaydır)
                                .addGap(57, 57, 57))
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane7)
                            .addComponent(jScrollPane3)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(194, 194, 194))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void personelDegistirmeKaydırActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personelDegistirmeKaydırActionPerformed
        // TODO add your handling code here:
        Personel personel = null;
        EntityManager em = emf.createEntityManager();
        Query q = em.createQuery("select p from Personel p");
        List<Personel> personeller = q.getResultList();
        if (!perKaydırmaProje2.isSelectionEmpty() && !perDegistirmePerList.isSelectionEmpty()) {
            for (Personel personel1 : personeller) {
                if (personel1.getTckimlik().equals(perDegistirmePerList.getSelectedValue())) {
                    personelKaydırmaModel3.removeElement(personel1.getTckimlik());
                    personelKaydırmaModel2.addElement(personel1.getTckimlik());
                    personel1.setCalisacagiproje(perKaydırmaProje2.getSelectedValue());
                    em.getTransaction().begin();
                    em.getTransaction().commit();
                }
            }
            em.close();
        } else {
            if (perKaydırmaProje2.isSelectionEmpty() && perDegistirmePerList.isSelectionEmpty()) {
                JOptionPane.showMessageDialog(null, "Kaydırmak İstediğiniz Projeyi Ve Personeli Seçiniz", "UYARI", JOptionPane.ERROR_MESSAGE, null);
            } else if (perKaydırmaProje2.isSelectionEmpty()) {
                JOptionPane.showMessageDialog(null, "Kaydırmak İstediğiniz Projeyi Seçiniz", "UYARI", JOptionPane.ERROR_MESSAGE, null);
            } else {
                JOptionPane.showMessageDialog(null, "Kaydırmak İstediğiniz Personeli Seçiniz", "UYARI", JOptionPane.ERROR_MESSAGE, null);
            }
        }
    }//GEN-LAST:event_personelDegistirmeKaydırActionPerformed

    private void perDegistirmeHepsiniKaydırActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perDegistirmeHepsiniKaydırActionPerformed
        // TODO add your handling code here:
        personelKaydırmaModel4.removeAllElements();
        EntityManager em = emf.createEntityManager();
        Query q = em.createQuery("select p from Personel p");
        List<Personel> personeller1 = q.getResultList();
        ArrayList<Personel> personeller = new ArrayList();
        if (!perDegistirmeProjeList.isSelectionEmpty()) {
            if (!perKaydırmaProje2.isSelectionEmpty()) {
                for (int i = 0; i < personelKaydırmaModel3.size(); i++) {
                    personelKaydırmaModel4.add(i, personelKaydırmaModel3.get(i));
                }
                for (Personel personel : personeller1) {
                    if (personel.getCalisacagiproje().equals(perDegistirmeProjeList.getSelectedValue())) {
                        personel.setCalisacagiproje(perKaydırmaProje2.getSelectedValue());
                        em.getTransaction().begin();
                        em.getTransaction().commit();
                    }
                }
                em.close();
                personelKaydırmaModel3.removeAllElements();
                perDegistirmeDegisenlerList.setModel(personelKaydırmaModel4);
            } else {
                JOptionPane.showMessageDialog(null, "Kaydırmak İstediğiniiz Projeyi Seçmediniz ...", "UYARI", JOptionPane.ERROR_MESSAGE, null);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Proje Seçmediniz ...", "UYARI", JOptionPane.ERROR_MESSAGE, null);
        }
    }//GEN-LAST:event_perDegistirmeHepsiniKaydırActionPerformed

    private void perDegistirmeProjeListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_perDegistirmeProjeListValueChanged
        try {
            // TODO add your handling code here:
            personelKaydırmaModel3.removeAllElements();
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/Database", "enes", "123");
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("select * from PERSONEL");
            while (rs.next()) {

                if (rs.getString("CALISACAGIPROJE").equalsIgnoreCase(perDegistirmeProjeList.getSelectedValue())) {

                    personelKaydırmaModel3.addElement(rs.getString("TCKIMLIK"));

                }
            }
            perDegistirmePerList.setModel(personelKaydırmaModel3);

        } catch (SQLException ex) {
            Logger.getLogger(personelKaydırma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_perDegistirmeProjeListValueChanged

    private void perKaydırmaProje2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_perKaydırmaProje2ValueChanged
        try {
            // TODO add your handling code here:
            personelKaydırmaModel2.removeAllElements();
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/Database", "enes", "123");
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("select * from PERSONEL");
            while (rs.next()) {
                if (rs.getString("CALISACAGIPROJE").equalsIgnoreCase(perKaydırmaProje2.getSelectedValue())) {
                    personelKaydırmaModel2.addElement(rs.getString("TCKIMLIK"));
                }
            }
            perDegistirmeDegisenlerList.setModel(personelKaydırmaModel2);
        } catch (SQLException ex) {
            Logger.getLogger(personelKaydırma.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_perKaydırmaProje2ValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(personelKaydırma.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(personelKaydırma.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(personelKaydırma.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(personelKaydırma.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new personelKaydırma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JList<String> perDegistirmeDegisenlerList;
    private javax.swing.JButton perDegistirmeHepsiniKaydır;
    private javax.swing.JList<String> perDegistirmePerList;
    private javax.swing.JList<String> perDegistirmeProjeList;
    private javax.swing.JList<String> perKaydırmaProje2;
    private javax.swing.JButton personelDegistirmeKaydır;
    // End of variables declaration//GEN-END:variables
}
